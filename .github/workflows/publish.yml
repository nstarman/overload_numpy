name: Upload Python Package

on:
  release:
    types: [published]

permissions:
  contents: read

jobs:

  main:
    uses: OpenAstronomy/github-actions-workflows/.github/workflows/publish_pure_python.yml@v1
    with:
      upload_to_pypi: true
      upload_to_anaconda: true
      test_extras: test
      test_command: ls $GITHUB_WORKSPACE; pytest $GITHUB_WORKSPACE/tests $GITHUB_WORKSPACE/docs
    secrets:
      pypi_token: ${{ secrets.PYPI_API_TOKEN }}
      anaconda_token: ${{ secrets.CONDA_API_TOKEN }}

  # FIXME! use OpenAstronomy/github-actions-workflows/.github/workflows/publish.yml@v1
  mypyc:
    name: mypyc wheels (${{ matrix.name }})
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            name: linux-x86_64
          - os: windows-2019
            name: windows-amd64
          - os: macos-11
            name: macos-x86_64
            macos_arch: "x86_64"
          - os: macos-11
            name: macos-arm64
            macos_arch: "arm64"
          - os: macos-11
            name: macos-universal2
            macos_arch: "universal2"

    steps:
      - uses: actions/checkout@v3

      - name: Build wheels via cibuildwheel
        uses: pypa/cibuildwheel@v2.8.1
        env:
          CIBW_ARCHS_MACOS: "${{ matrix.macos_arch }}"
          # This isn't supported in pyproject.toml which makes sense (but is annoying).
          CIBW_PROJECT_REQUIRES_PYTHON: ">=3.8"

      - name: Upload wheels as workflow artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.name }}-mypyc-wheels
          path: ./wheelhouse/*.whl

      - name: Upload wheels to PyPI via Twine
        env:
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: pipx run twine upload --verbose -u '__token__' wheelhouse/*.whl

  update-stable-branch:
    name: Update stable branch
    needs: [main, mypyc]
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout stable branch
        uses: actions/checkout@v3
        with:
          ref: stable
          fetch-depth: 0

      - name: Update stable branch to release tag & push
        run: |
          git reset --hard ${{ github.event.release.tag_name }}
          git push
