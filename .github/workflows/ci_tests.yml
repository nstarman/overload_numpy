name: CI

on:
  push:
    branches:
    - main
    tags:
    - '*'
  pull_request:

permissions:
  contents: read

env:
  ARCH_ON_CI: "normal"
  IS_CRON: "false"

jobs:
  initial_checks:
    name: Mandatory checks before CI
    runs-on: ubuntu-latest
    steps:
    - name: Check base branch
      uses: actions/github-script@v3
      if: github.event_name == 'pull_request'
      with:
        script: |
          const skip_label = 'skip-basebranch-check';
          const { default_branch: allowed_basebranch } = context.payload.repository;
          const pr = context.payload.pull_request;
          if (pr.labels.find(lbl => lbl.name === skip_label)) {
            core.info(`Base branch check is skipped due to the presence of ${skip_label} label`);
            return;
          }
          if (pr.base.ref !== allowed_basebranch) {
            core.setFailed(`PR opened against ${pr.base.ref}, not ${allowed_basebranch}`);
          } else {
            core.info(`PR opened correctly against ${allowed_basebranch}`);
          }


  tests:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    needs: initial_checks
    strategy:
      fail-fast: true
      matrix:
        include:

          - name: Python 3.10 with minimal dependencies and full coverage
            os: ubuntu-latest
            python: '3.10'
            toxenv: py310-test-cov

          - name: Python 3.9 with all optional dependencies
            os: ubuntu-latest
            python: '3.9'
            toxenv: py39-test-alldeps
            toxargs: -v --develop

          - name: Python 3.8 with oldest supported version of all dependencies
            os: ubuntu-18.04
            python: '3.8'
            toxenv: py38-test-oldestdeps-alldeps-cov-clocale

          - name: Python 3.9 with all optional dependencies (Windows)
            os: windows-latest
            python: '3.9'
            toxenv: py39-test-alldeps
            toxposargs: --durations=50

          - name: Python 3.9 with all optional dependencies (MacOS X)
            os: macos-latest
            python: '3.9'
            toxenv: py39-test-alldeps
            toxposargs: --durations=50

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python }}
    - name: Install language-pack-fr and tzdata
      if: startsWith(matrix.os, 'ubuntu')
      run: |
        sudo apt-get update
        sudo apt-get install language-pack-fr tzdata
    - name: Install Python dependencies
      run: python -m pip install --upgrade tox codecov
    - name: Run tests
      run: tox ${{ matrix.toxargs }} -e ${{ matrix.toxenv }} -- ${{ matrix.toxposargs }}
    - name: Upload coverage to codecov
      if: ${{ contains(matrix.toxenv,'-cov') }}
      uses: codecov/codecov-action@v2
      with:
        file: ./coverage.xml


  test_pure_wheel_building:
    uses: OpenAstronomy/github-actions-workflows/.github/workflows/publish_pure_python.yml@v1
    if: (github.event_name == 'push' || github.event_name == 'pull_request')
    needs: initial_checks
    with:
      upload_to_pypi: true
      repository_url: https://test.pypi.org/legacy/
      upload_to_anaconda: false
      test_extras: test
      test_command: pytest $GITHUB_WORKSPACE/tests $GITHUB_WORKSPACE/docs
    secrets:
      pypi_token: ${{ secrets.TEST_PYPI_API_TOKEN }}

  # FIXME! use OpenAstronomy/github-actions-workflows/.github/workflows/publish.yml@v1
  test_wheel_building:
    # This ensures that a couple of targets work fine in pull requests and pushes
    name: mypyc wheels (${{ matrix.name }})
    if: (github.event_name == 'push' || github.event_name == 'pull_request')
    needs: initial_checks
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: true
      matrix:
        include:
          - os: ubuntu-latest
            name: linux-x86_64

    steps:
      - uses: actions/checkout@v3

      - name: Build wheels via cibuildwheel
        uses: pypa/cibuildwheel@v2.10.0
        env:
          CIBW_ARCHS_MACOS: "${{ matrix.macos_arch }}"
          # This isn't supported in pyproject.toml which makes sense (but is annoying).
          CIBW_PROJECT_REQUIRES_PYTHON: ">=3.8"

      - name: Upload wheels as workflow artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.name }}-mypyc-wheels
          path: ./wheelhouse/*.whl
